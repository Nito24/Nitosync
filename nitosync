#!/bin/sh


configpath=$HOME'/.config/nitosync'
configfile='config'


configuration(){
    if test -f ${configpath}/${configfile} ; then
        . ${configpath}/${configfile}
    else
        echo 'No config file found'
    fi
}

configuration


#VERY IMPORTANT TO SET PATHS CORRECTLY -> END THEM WITH / -> /MY/PATH/
#                                                                   ---

Help(){
    # Display Help
    echo "Script for syncronicing saves (or any other file) before running a program and after closing it."
    echo
    echo "Syntax: scriptTemplate [-e|a|s|r|u|p|c|h]"
    echo
    echo "options:"
    echo "  -e           App to (e)xecute between syncs."
    echo "  -a           Extra commands to pass (a)fter execute app."
    echo "  -s           Local (s)avepath to sync to/from."
    echo "  -r           (R)emote ip/address."
    echo "  -u           Remote (u)ser to login as."
    echo "  -p           Remote (p)ath to sync to/from."
    echo "  -c           Specific (c)onfig file to use (name; must be located in ~/.config/nitosync/)."
    echo "  -h           Print this (h)elp dialog."
    echo
    exit
}

#while getopts :h option; do
#   case $option in
#      h) Help;;
#   esac
#done

while getopts s:r:u:p:e:a:c::h flag
do
    case "${flag}" in
        s) savepath=${OPTARG};;
        r) remote=${OPTARG};;
        u) user=${OPTARG};;
        p) remotepath=${OPTARG};;
        e) emulator=${OPTARG};;
        a) after==${OPTARG};;
        c) configfile=${OPTARG}
           configuration;;
        h) Help;;
    esac
done


#IF SAVEPATH, REMOTE, USER AND REMOTEPATH ARENT DECLARED (NORMALLY OR WITH CONFIG FILE) EXIT!!!!

#â€¦

bisync(){
    echo 'Connection established succesffully with remote'
    #notify-send Syncronization 'Succesffully connected with remote server' --app-name=' NitoSync'
    #down
    rsync -azbu --backup-dir=backups/ --exclude=backups $user@$remote:$remotepath $savepath
    #up
    rsync -azbu --backup-dir=backups/ --exclude=backups $savepath $user@$remote:$remotepath
    echo 'Succesffully synced files (bidirectionally)'
    notify-send Syncronization 'Succesffully synced files' --app-name=' NitoSync'
}

uploadsync(){
    echo 'Connection established succesffully with remote'
    #notify-send Syncronization 'Succesffully connected with remote server' --app-name=' NitoSync'
    #up
    rsync -azbu --backup-dir=backups/ --exclude=backups $savepath $user@$remote:$remotepath
    echo 'Succesffully uploaded files to remote server'
    notify-send Syncronization 'Succesffully synced files' --app-name=' NitoSync'
}

noserver(){
    echo 'Error: Cant reach remote server'
    notify-send Syncronization 'Couldnt reach remote server' --app-name=' NitoSync'
}


#START SCRIPT SYNC (bidirectional)
echo 'Starting intitial sync (bidirectional)'
#notify-send Syncronization 'NitoSync is running now' --app-name=' NitoSync'
if ping -c 1 $remote &> /dev/null
then
    bisync
else
    noserver
fi
echo 'Ended start sync process'
echo


$emulator $after &> /dev/null


#END SCRIPT SYNC (only upload)
echo
echo 'Starting final sync'
if ping -c 1 $remote &> /dev/null
then
    uploadsync
else
    noserver
fi
echo 'Ended end sync process'



#SWITCH EXAMPLE
#./script -e 'systemd-inhibit /home/nito/Documents/emulators/yuzu-mainline-20240304-537296095.AppImage' -s /home/nito/.local/share/yuzu/nand/user/save/0000000000000000/D2354B5EEA909F6A6F86E5D7EF1D0A6F/ -r '192.168.1.250 -p /home/pi/ROMSYNC/switch/ -u pi
